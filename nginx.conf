
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    server {
        listen         80 default_server;
    	listen         [::]:80 default_server;
        server_name  www.bkw-oneview.com;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        return 301 https://www.bkw-oneview.com;

        #location / {
        #    proxy_pass   https://127.0.0.1;
        #}

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    server {
        listen       443 ssl;
        server_name  www.bkw-oneview.com;

        ssl_certificate      C:\Users\Administrator\Desktop\PPM\megowork-ppm-server\config\env\ssl\cert.pem;
        ssl_certificate_key  C:\Users\Administrator\Desktop\PPM\megowork-ppm-server\config\env\ssl\key.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {
            root   C:\Users\Administrator\Desktop\PPM\Front-end\dist;
            index  index.html index.htm;
        }
    }

    server {
        listen         80;
        server_name  be.bkw-oneview.com;

        return 301 https://be.bkw-oneview.com;

        location / {
            proxy_pass  https://be.bkw-oneview.com;
        }
    }

    server {
        listen       443 ssl;
        server_name  be.bkw-oneview.com;
	    client_max_body_size 5M;

        ssl_certificate      C:\Users\Administrator\Desktop\PPM\megowork-ppm-server\config\env\ssl\cert.pem;
        ssl_certificate_key  C:\Users\Administrator\Desktop\PPM\megowork-ppm-server\config\env\ssl\key.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location / {

            # handle OPTIONS requests
            # @note: don't try to DRY out this "if" block, or you're gonna have a bad time.
            # @see: http://wiki.nginx.org/IfIsEvil
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Headers'     'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
                add_header 'Access-Control-Allow-Methods'     'GET, DELETE, OPTIONS, POST, PUT';
                add_header 'Access-Control-Allow-Origin'      'https://example.com';
                add_header 'Access-Control-Max-Age'           2592000;
                add_header 'Content-Length'                   0;
                add_header 'Content-Type'                     'text/plain charset=UTF-8';
                return 204;
            }

            # set additional security headers
            add_header 'Cache-Control'                    'no-cache, no-store, must-revalidate';
            add_header 'Content-Security-Policy'          'connect-src example.com';
            add_header 'Expires'                          '0';
            add_header 'Pragma'                           'no-cache';
            add_header 'Strict-Transport-Security'        'max-age=31536000; includeSubDomains';
            add_header 'X-Content-Type-Options'           'nosniff';
            add_header 'X-Frame-Options'                  'DENY';
            add_header 'X-XSS-Protection'                 '1; mode=block';

        #    root   C:\Users\Administrator\Desktop\PPM\Front-end\dist;
        #    index  index.html index.htm;
            proxy_pass https://localhost;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

}
